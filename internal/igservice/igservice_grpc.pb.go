// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.1
// source: internal/igservice/igservice.proto

package brfactorybackend

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// IGServiceClient is the client API for IGService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IGServiceClient interface {
	CreateIGTVVideo(ctx context.Context, in *CreateIGTVVideoRequest, opts ...grpc.CallOption) (*CreateIGTVVideoResponse, error)
}

type iGServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIGServiceClient(cc grpc.ClientConnInterface) IGServiceClient {
	return &iGServiceClient{cc}
}

func (c *iGServiceClient) CreateIGTVVideo(ctx context.Context, in *CreateIGTVVideoRequest, opts ...grpc.CallOption) (*CreateIGTVVideoResponse, error) {
	out := new(CreateIGTVVideoResponse)
	err := c.cc.Invoke(ctx, "/igclient.IGService/CreateIGTVVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IGServiceServer is the server API for IGService service.
// All implementations must embed UnimplementedIGServiceServer
// for forward compatibility
type IGServiceServer interface {
	CreateIGTVVideo(context.Context, *CreateIGTVVideoRequest) (*CreateIGTVVideoResponse, error)
	mustEmbedUnimplementedIGServiceServer()
}

// UnimplementedIGServiceServer must be embedded to have forward compatible implementations.
type UnimplementedIGServiceServer struct {
}

func (UnimplementedIGServiceServer) CreateIGTVVideo(context.Context, *CreateIGTVVideoRequest) (*CreateIGTVVideoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIGTVVideo not implemented")
}
func (UnimplementedIGServiceServer) mustEmbedUnimplementedIGServiceServer() {}

// UnsafeIGServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IGServiceServer will
// result in compilation errors.
type UnsafeIGServiceServer interface {
	mustEmbedUnimplementedIGServiceServer()
}

func RegisterIGServiceServer(s grpc.ServiceRegistrar, srv IGServiceServer) {
	s.RegisterService(&IGService_ServiceDesc, srv)
}

func _IGService_CreateIGTVVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIGTVVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IGServiceServer).CreateIGTVVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/igclient.IGService/CreateIGTVVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IGServiceServer).CreateIGTVVideo(ctx, req.(*CreateIGTVVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// IGService_ServiceDesc is the grpc.ServiceDesc for IGService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IGService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "igclient.IGService",
	HandlerType: (*IGServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIGTVVideo",
			Handler:    _IGService_CreateIGTVVideo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/igservice/igservice.proto",
}
